{"version":3,"sources":["components/ToDoItems.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItems","props","React","createElement","onClick","onClickItem","id","style","textDecoration","isStyled","key","text","InputArea","input","setInput","useState","className","onChange","event","value","target","type","onSumbit","App","arrayList","setArrayList","styledItems","setStyledItems","deleteItem","includes","prev","filter","item","index","num","InputARea","addList","prevValue","map","list","ToDoItem","ReactDOM","render","document","getElementById"],"mappings":"qLAgBeA,MAdf,SAAmBC,GACjB,OACEC,IAAAC,cAAA,MACEC,QAASA,KACPH,EAAMI,YAAYJ,EAAMK,KAE1BC,MAAO,CAAEC,eAAgBP,EAAMQ,SAAW,eAAiB,QAC3DC,IAAKT,EAAMK,IAEVL,EAAMU,OCaEC,MAtBf,SAAmBX,GACjB,MAAOY,EAAOC,GAAYC,qBAO1B,OACEb,IAAAC,cAAA,OAAKa,UAAU,QACbd,IAAAC,cAAA,SAAOc,SAPX,SAAsBC,GACpB,MAAM,MAAEC,GAAUD,EAAME,OAExBN,EAASK,IAIwBA,MAAON,EAAOQ,KAAK,SAClDnB,IAAAC,cAAA,UACEC,QAASA,KACPH,EAAMqB,SAAST,EAAOC,KAGxBZ,IAAAC,cAAA,YAAM,UC8BCoB,MA5Cf,WACE,MAAOC,EAAWC,GAAgBV,mBAAS,KAEpCW,EAAaC,GAAkBZ,mBAAS,IAU/C,SAASa,EAAWtB,GACdoB,EAAYG,SAASvB,IACvBmB,EAAcK,GAASA,EAAKC,OAAO,CAACC,EAAMC,IAAUA,IAAU3B,IAC9DqB,EAAgBG,GAASA,EAAKC,OAAQG,GAAQA,IAAQ5B,KAEtDqB,EAAgBG,GAAS,IAAIA,EAAMxB,IAIvC,OACEJ,IAAAC,cAAA,OAAKa,UAAU,aACbd,IAAAC,cAAA,OAAKa,UAAU,WACbd,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAACgC,EAAS,CAACb,SAtBf,SAAkBT,EAAOC,GACvB,IAAIsB,EAAUvB,EACdY,EAAcY,GACL,IAAIA,EAAWD,IAExBtB,EAAS,OAkBPZ,IAAAC,cAAA,WACED,IAAAC,cAAA,UACGqB,EAAUc,IAAI,CAACC,EAAMN,IACpB/B,IAAAC,cAACqC,EAAQ,CACP7B,KAAM4B,EACNjC,GAAI2B,EACJxB,SAAUiB,EAAYG,SAASI,GAC/B5B,YAAauB,S,OClC3Ba,EAASC,OAAOxC,IAAAC,cAACoB,EAAG,MAAKoB,SAASC,eAAe,U","file":"static/js/main.05e0f1fc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction ToDoItems(props) {\r\n  return (\r\n    <li\r\n      onClick={() => {\r\n        props.onClickItem(props.id);\r\n      }}\r\n      style={{ textDecoration: props.isStyled ? \"line-through\" : \"none\" }}\r\n      key={props.id}\r\n    >\r\n      {props.text}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ToDoItems;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction InputArea(props) {\r\n  const [input, setInput] = useState();\r\n\r\n  function handleChange(event) {\r\n    const { value } = event.target;\r\n\r\n    setInput(value);\r\n  }\r\n  return (\r\n    <div className=\"form\">\r\n      <input onChange={handleChange} value={input} type=\"text\" />\r\n      <button\r\n        onClick={() => {\r\n          props.onSumbit(input, setInput);\r\n        }}\r\n      >\r\n        <span>Add</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputArea;\r\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItems\";\nimport InputARea from \"./InputArea\";\n\nfunction App() {\n  const [arrayList, setArrayList] = useState([]);\n\n  const [styledItems, setStyledItems] = useState([]);\n\n  function onSumbit(input, setInput) {\n    var addList = input;\n    setArrayList((prevValue) => {\n      return [...prevValue, addList];\n    });\n    setInput(\"\");\n  }\n\n  function deleteItem(id) {\n    if (styledItems.includes(id)) {\n      setArrayList((prev) => prev.filter((item, index) => index !== id));\n      setStyledItems((prev) => prev.filter((num) => num !== id));\n    } else {\n      setStyledItems((prev) => [...prev, id]);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputARea onSumbit={onSumbit} />\n      <div>\n        <ul>\n          {arrayList.map((list, index) => (\n            <ToDoItem\n              text={list}\n              id={index}\n              isStyled={styledItems.includes(index)}\n              onClickItem={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}